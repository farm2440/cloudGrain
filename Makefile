#############################################################################
# Makefile for building: cloudGrain
# Generated by qmake (2.01a) (Qt 4.6.3) on: ?? ???. 31 16:44:21 2014
# Project:  cloudGrain.pro
# Template: app
# Command: /new_disk/Hiteg/qt/build/bin/qmake -spec /new_disk/Hiteg/qt/build/mkspecs/qws/linux-arm-g++ -unix CONFIG+=debug -o Makefile cloudGrain.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-linux-gcc
CXX           = arm-linux-g++
DEFINES       = -DQT_XML_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/new_disk/Hiteg/qt/build/mkspecs/qws/linux-arm-g++ -I. -I/new_disk/Hiteg/qt/build/include/QtCore -I/new_disk/Hiteg/qt/build/include/QtNetwork -I/new_disk/Hiteg/qt/build/include/QtXml -I/new_disk/Hiteg/qt/build/include -I.
LINK          = arm-linux-g++
LFLAGS        = -Wl,-rpath,/new_disk/Hiteg/qt/build/lib
LIBS          = $(SUBLIBS)  -L/new_disk/Hiteg/qt/build//lib -lQtXml -L/new_disk/Hiteg/qt/build//lib -lQtNetwork -lQtCore -lpthread 
AR            = arm-linux-ar cqs
RANLIB        = 
QMAKE         = /new_disk/Hiteg/qt/build/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = arm-linux-strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		worker.cpp \
		serialport.cpp moc_worker.cpp \
		moc_serialport.cpp
OBJECTS       = main.o \
		worker.o \
		serialport.o \
		moc_worker.o \
		moc_serialport.o
DIST          = /new_disk/Hiteg/qt/build/mkspecs/common/g++.conf \
		/new_disk/Hiteg/qt/build/mkspecs/common/unix.conf \
		/new_disk/Hiteg/qt/build/mkspecs/common/linux.conf \
		/new_disk/Hiteg/qt/build/mkspecs/common/qws.conf \
		/new_disk/Hiteg/qt/build/mkspecs/qconfig.pri \
		/new_disk/Hiteg/qt/build/mkspecs/features/qt_functions.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/qt_config.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/exclusive_builds.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/default_pre.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/debug.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/default_post.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/warn_on.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/qt.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/unix/thread.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/moc.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/resources.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/uic.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/yacc.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/lex.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/include_source_dir.prf \
		cloudGrain.pro
QMAKE_TARGET  = cloudGrain
DESTDIR       = 
TARGET        = cloudGrain

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: cloudGrain.pro  /new_disk/Hiteg/qt/build/mkspecs/qws/linux-arm-g++/qmake.conf /new_disk/Hiteg/qt/build/mkspecs/common/g++.conf \
		/new_disk/Hiteg/qt/build/mkspecs/common/unix.conf \
		/new_disk/Hiteg/qt/build/mkspecs/common/linux.conf \
		/new_disk/Hiteg/qt/build/mkspecs/common/qws.conf \
		/new_disk/Hiteg/qt/build/mkspecs/qconfig.pri \
		/new_disk/Hiteg/qt/build/mkspecs/features/qt_functions.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/qt_config.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/exclusive_builds.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/default_pre.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/debug.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/default_post.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/warn_on.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/qt.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/unix/thread.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/moc.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/resources.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/uic.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/yacc.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/lex.prf \
		/new_disk/Hiteg/qt/build/mkspecs/features/include_source_dir.prf \
		/new_disk/Hiteg/qt/build/lib/libQtXml.prl \
		/new_disk/Hiteg/qt/build/lib/libQtCore.prl \
		/new_disk/Hiteg/qt/build/lib/libQtNetwork.prl
	$(QMAKE) -spec /new_disk/Hiteg/qt/build/mkspecs/qws/linux-arm-g++ -unix CONFIG+=debug -o Makefile cloudGrain.pro
/new_disk/Hiteg/qt/build/mkspecs/common/g++.conf:
/new_disk/Hiteg/qt/build/mkspecs/common/unix.conf:
/new_disk/Hiteg/qt/build/mkspecs/common/linux.conf:
/new_disk/Hiteg/qt/build/mkspecs/common/qws.conf:
/new_disk/Hiteg/qt/build/mkspecs/qconfig.pri:
/new_disk/Hiteg/qt/build/mkspecs/features/qt_functions.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/qt_config.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/exclusive_builds.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/default_pre.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/debug.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/default_post.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/warn_on.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/qt.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/unix/thread.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/moc.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/resources.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/uic.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/yacc.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/lex.prf:
/new_disk/Hiteg/qt/build/mkspecs/features/include_source_dir.prf:
/new_disk/Hiteg/qt/build/lib/libQtXml.prl:
/new_disk/Hiteg/qt/build/lib/libQtCore.prl:
/new_disk/Hiteg/qt/build/lib/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -spec /new_disk/Hiteg/qt/build/mkspecs/qws/linux-arm-g++ -unix CONFIG+=debug -o Makefile cloudGrain.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/cloudGrain1.0.0 || $(MKDIR) .tmp/cloudGrain1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/cloudGrain1.0.0/ && $(COPY_FILE) --parents definitions.h worker.h serialport.h .tmp/cloudGrain1.0.0/ && $(COPY_FILE) --parents main.cpp worker.cpp serialport.cpp .tmp/cloudGrain1.0.0/ && (cd `dirname .tmp/cloudGrain1.0.0` && $(TAR) cloudGrain1.0.0.tar cloudGrain1.0.0 && $(COMPRESS) cloudGrain1.0.0.tar) && $(MOVE) `dirname .tmp/cloudGrain1.0.0`/cloudGrain1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/cloudGrain1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_worker.cpp moc_serialport.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_worker.cpp moc_serialport.cpp
moc_worker.cpp: serialport.h \
		iniparser.h \
		dictionary.h \
		worker.h
	/new_disk/Hiteg/qt/build//bin/moc $(DEFINES) $(INCPATH) worker.h -o moc_worker.cpp

moc_serialport.cpp: serialport.h
	/new_disk/Hiteg/qt/build//bin/moc $(DEFINES) $(INCPATH) serialport.h -o moc_serialport.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp definitions.h \
		worker.h \
		serialport.h \
		iniparser.h \
		dictionary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

worker.o: worker.cpp worker.h \
		serialport.h \
		iniparser.h \
		dictionary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o worker.o worker.cpp

serialport.o: serialport.cpp serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serialport.o serialport.cpp

moc_worker.o: moc_worker.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_worker.o moc_worker.cpp

moc_serialport.o: moc_serialport.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serialport.o moc_serialport.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

